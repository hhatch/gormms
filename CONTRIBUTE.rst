*************************
Contribute
*************************

:doc:`CONTACT` us with suggestions, issues or comments.

For developers - compiling DORMMS and GORMMS
************************************************

GORMMS is the graphical and documentation of DORMMS that generates the website.

.. code-block:: bash

    # GORMMS depends on DORMMS. Install development versions of DORMMS using git as follows
    git clone https://github.com/usnistgov/dormms
    cd dormms
    git checkout [version] # optional
    pip install .

    # build GORMMS
    pip install sphinx sphinx_rtd_theme nbsphinx numpy pandas matplotlib tabulate sphinxcontrib-bibtex
    sudo apt install pandoc
    git clone https://github.com/usnistgov/gormms
    mkdir gormms/build; cd $_
    cmake ..
    make
    google-chrome html/index.html

Developer policies and guidelines
************************************************

DORMMS should contain the minimal information required to reproduce the results, while GORMMS should contain more of the documentation, explanation and metadata.
GORMMS also contains analysis of data.
Complicated analysis should likely be part of a separate package such as pyfeasst.

To Do
*********

- Git should ignore jupyter notebook output.
- DORMMS should be organized for not only similar runs with slight parameter changes, but also for identical results with different software.
- Do not copy and paste. Instead, reference models and methods to minimize the amount of duplicate information in the result pages.
- Minimize the amount of analysis in result pages by using other software such as pyfeasst to perform complicated analysis. The code shown should be
- Develop tools to compare DORMMS results between different versions and/or testing.
- Develop DORMMS versioning scheme that identifies major changes to existing data vs additions.

Version releases:

- HTML generated by GORMMS can be commit into a nist-pages orphan branch in DORMMS for version releases.
- Develop workflow for testing / release of GORMMS(github) and DORMMS(pypi, html, github)
- Users should create feature branches which are squash merged into main after testing.

